{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasteorama APP",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API for managing user recipes — creating, viewing, updating, and deleting."
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000",
      "description": "Локальний сервер для розробки"
    },
    {
      "url": "https://nodejs-hw-mongodb-iy1l.onrender.com",
      "description": "Продакшн-сервер на Render"
    }
  ],
  "tags": [
    {
      "name": "Tasteorama",
      "description": "Operations with recipes."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Categories",
      "description": "Categories operations"
    }
  ],
  "paths": {
    "/api/recipes": {
      "get": {
        "summary": "Search and filter recipes",
        "operationId": "getRecipes",
        "description": "Get a list of recipes with filtering, search, and pagination.",
        "tags": [
          "Tasteorama"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search by recipe name (title)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category (for example, \"Breakfast\")",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Geographic origin of the recipe (for example, \"Italian\")",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ingredient",
            "in": "query",
            "description": "Search by ingredient name (for example, \"Tomatoes\")",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/recipes"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 12
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 48
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": []
      }
    },
    "/api/recepies/{id}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe by id",
        "operationId": "getRecipe",
        "description": "Get recipe by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6839dc66812ffad184130baf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get recipe by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found recipe with id 6839dc66812ffad184130baf!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/recipes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/recipesError400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [],
        "summary": "Create a new user",
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201_register"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Authenticates a user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "jane@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mySecurePass123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUz..."
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recipes/addFavorite/{recipeId}": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Add recipe to favorites",
        "description": "Додає рецепт до списку улюблених користувача",
        "operationId": "addToFavorites",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "description": "ID рецепта, який потрібно додати до улюблених",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe added to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Recipe added to favorites"
                    },
                    "data": {
                      "type": "object",
                      "description": "Оновлений рецепт"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recipes/own/{recipeId}": {
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Delete own recipe",
        "description": "Видалення власного рецепта за ID (доступно тільки авторизованим користувачам)",
        "operationId": "deleteOwnRecipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "description": "ID рецепта, який треба видалити",
            "schema": {
              "type": "string",
              "example": "665f1a328a71a67cb9a3e123"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted. No content."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "security": [],
        "summary": "Get all categories",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "Successfully found categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categories"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "recipes": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "category",
          "description",
          "cookingTime",
          "ownerId",
          "ingredients"
        ],
        "properties": {
          "_id": {
            "description": "The ID of the recipes",
            "type": "string",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "title": {
            "description": "The name of the recipes",
            "type": "string",
            "example": "Pasta Carbonara"
          },
          "category": {
            "description": "The category of the recipes",
            "type": "string",
            "example": "Pasta"
          },
          "area": {
            "description": "The area of the recipes",
            "type": "string",
            "example": "Italian"
          },
          "description": {
            "description": "The description of the recipes",
            "type": "string",
            "example": "A classic Italian pasta dish"
          },
          "cookingTime": {
            "description": "The cooking time of the recipes",
            "type": "number",
            "example": 30
          },
          "calories": {
            "description": "The calories of the recipes",
            "type": "number",
            "example": 500
          },
          "instructions": {
            "description": "The instructions of the recipes",
            "type": "string",
            "example": "Cook the pasta according to the package instructions."
          },
          "recipeImg": {
            "description": "The image of the recipes",
            "type": "string",
            "format": "url",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          },
          "ownerId": {
            "description": "The ID of the user who owns the recipes",
            "type": "string",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "ingredients": {
            "description": "The ingredients of the recipes",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "measure"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "640c2dd963a319ea671e377f"
                },
                "measure": {
                  "type": "string",
                  "example": "500g"
                }
              }
            }
          },
          "favorites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "description": "User name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User email",
            "type": "string",
            "example": "tVh0s@example.com"
          },
          "_id": {
            "description": "User id",
            "type": "string",
            "example": "6839dc66812ffad184130baf"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "categories": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6462a6cd4c3d0ddd28897f8a"
          },
          "name": {
            "type": "string",
            "example": "Seafood"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request - validation failed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 403
                },
                "message": {
                  "type": "string",
                  "example": "ForbiddenError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You can delete only your own recipes"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Recipe not found"
                },
                "data": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email already in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email already in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "error"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong on the server"
                },
                "error": {
                  "type": "string",
                  "example": "InternalServerError"
                }
              }
            }
          }
        }
      },
      "recipesError400": {
        "description": "Bad request - validation failed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requested recipe id: '6462a8f74c3d0ddd28897fb' is not a mongoose ObjectId"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "201_register": {
        "description": "Successfully registered a user",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Successfully registered a user!"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Arya Stark"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "arya@gmail.com"
                    },
                    "_id": {
                      "type": "string",
                      "example": "68485158b4197a8ecf3f6ccf"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-06-10T15:38:00.219Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-06-10T15:38:00.219Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}